@startuml
skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle

abstract class "{abstract}\nCommand" {
    + {abstract} execute(model : Model) : CommandResult
}

interface Model <<interface>> {
    + addPerson(Person person) : void
    + hasPerson(Person person) : boolean
}

class ModelManager implements Model{
    -addressBook : AddressBook
}

class Person {
    /' Fields '/
     -block : Block
     -faculty : Faculty
     -status : CovidStatus

    /' Methods '/
    + getBlockAsString() : String
    + getStatusAsString() : String
    + getFacultyAsString() : String
}

class SummariseCommand {
    /' Fields '/
    - {static} FACULTY : List
    - {static} BLOCKS : List
    - {static} BY_POSITIVE : Predicate
    - {static} BY_NEGATIVE : Predicate
    - {static} BY_HRN : Predicate
    - {static} covidStatsByBlockDataList : TreeMap
    - {static} positiveStatsByFacultyData : TreeMap
    - {static} highestPositiveByFaculty : int

    /' Methods '/
    + execute(model : Model) : CommandResult
    + filterByFaculty(list : List) : String
    + filterByBlock(list : List) : String
    - summariseFaculty(list, faculty) : String
    - summariseBlock(list, block) : String
    - summariseAll(list : List) : String
    + {static} getCovidStatsByBlockDataList() : TreeMap
    + {static} getPositiveStatsByFacultyData() : TreeMap
    + {static} shouldOpenPieChartWindow() : boolean
    + {static} getHighestPositiveByFaculty() : int
}

ModelManager <-- SummariseCommand
"{abstract}\nCommand" <|-- SummariseCommand
SummariseCommand --> Person
@enduml
